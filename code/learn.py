"""
    此代码主要用于模型训练和绘制图像。

    因为数据集非常小，我把数据集放在内存中，而不是从文件中读取，
    因为这样做模型的训练速度会更快

    作者:匿名
    This code is mainly used for model training and drawing images.

    Because the data set is very small, I put the data set in the memory instead of reading it in the file,
    because the training speed of the model will be faster

    Author: Anonymous
"""
from sklearn.svm import NuSVR, LinearSVR
from sklearn.model_selection import train_test_split
from LSSVMRegression import LSSVMRegression
from sklearn.neural_network import MLPRegressor
import numpy as np
from matplotlib import pyplot as plt
import matplotlib
import random

# 设置中文字体部分
font = {'family': 'MicroSoft Yahei',
        'weight': 'bold',
        'size': 12}

matplotlib.rc("font", **font)
# 17年自变量
x = [
        [0.334786113, 0.069517084, 0.101079347, 0.051312795, 0.375035063, 0.720572877, 0.177055168, 0.051103988,
         0.717810335, 0.984375, 0.135913303, 0.147058824],
        [1.016791935, 2.348765746, 1.078179697, 4.681481885, 2.324824684, 1.044308517, 1.011743816, 1.134674735,
         0.962477517, 1.078125, 1.519250071, 2.344117647],
        [0.479384241, 1.608091333, 0.716744458, 0.688240023, 2.485834502, 1.044308517, 0.429991122, 0.331621952,
         0.633256236, 1.21875, 0.716803036, 1.114705882],
        [1.024159992, 0.428173141, 0.422695449, 0.9079885, 0.611313698, 1.044308517, 0.303523145, 0.28121043,
         0.732202522, 0.90625, 0.498969386, 0.532352941],
        [0.172688848, 0.691263558, 0.143961494, 1.878544275, 0.423468911, 1.044308517, 0.480578313, 0.416587526,
         0.798766388, 1.0625, 0.70563208, 0.705882353],
        [0.682926829, 0.325932559, 1.135355893, 0.564059243, 0.311547452, 1.044308517, 0.278229549, 0.152134773,
         0.557697253, 1.03125, 0.404016257, 0.473529412],
        [0.783777116, 0.589836993, 0.140898483, 0.232338234, 0.345582048, 1.044308517, 0.252935954, 0.482094807,
         0.991261891, 0.9375, 0.599507994, 0.638235294],
        [1.829120274, 0.671808543, 1.970536757, 0.004959601, 0.786068256, 1.044308517, 2.402891564, 1.455355725,
         1.214340793, 1.140625, 1.664472505, 0.908823529],
        [0.612930283, 0.575754492, 0.146003501, 0.371970079, 0.672183263, 0.438609577, 2.47877235, 0.233638018,
         0.94268826, 1.40625, 0.480351126, 0.229411765],
        [1.328092364, 0.583406256, 1.877625438, 0.171678498, 1.628424497, 1.044308517, 1.315266961, 1.206760443,
         1.101002319, 0.96875, 1.210186944, 1.202941176],
        [0.299787839, 0.943201937, 0.229725788, 0.812802311, 1.226554465, 1.044308517, 0.758807862, 0.527936054,
         0.818555645, 0.9375, 0.623711733, 0.744117647],
        [0.131243524, 1.104702985, 1.511085182, 2.431539793, 0.990930341, 1.044308517, 0.758807862, 1.621062832,
         1.253919307, 0.828125, 1.102201032, 1.276470588],
        [6.505534267, 2.151366532, 4.651691951, 0.84465821, 2.293408134, 0.74668059, 1.821138869, 1.924570665,
         1.104600365, 1.078125, 2.170889195, 3.226470588],
        [0.390507047, 2.742261747, 2.90169195, 3.084108839, 1.915755026, 1.044308517, 2.681121113, 2.241373846,
         1.13878181, 1.0625, 2.252809542, 3.220588235],
        [1.620512146, 1.265959828, 2.909859978, 0.345264535, 0.524918186, 1.030732506, 1.416441343, 1.95012266,
         1.459007975, 1.078125, 1.653301548, 1.161764706],
        [0.683847837, 2.293168359, 0.941365228, 1.543008189, 2.270500234, 1.044308517, 1.087624603, 2.621537662,
         1.237728097, 0.921875, 2.122481717, 1.308823529],
        [0.701807477, 1.557947862, 0.104142357, 0.948619078, 0.44114072, 1.044308517, 1.719964488, 1.2686669,
         0.976869704, 0.890625, 1.275350856, 0.708823529],
        [0.367481868, 1.127983882, 0.178675613, 0.999550366, 0.450958392, 1.044308517, 1.26467977, 1.710529435,
         1.084811108, 0.8125, 1.210186944, 1.002941176],
        [0.075983093, 0.063086347, 0.028588098, 0.227187879, 0.314165498, 1.044308517, 0.303523145, 0.057197689,
         0.636854282, 1.09375, 0.135913303, 0.088235294],
        [0.582537046, 0.539205112, 0.258313886, 0.285558568, 0.81944834, 1.044308517, 0.505871908, 1.165558718,
         1.370855828, 1, 0.949531295, 0.591176471],
        [1.630643225, 2.262479904, 2.588243875, 3.639011895, 2.108181393, 1.044308517, 2.453478755, 3.380272624,
         1.354664618, 1.015625, 2.595385539, 1.905882353],
        [1.034751575, 0.737743951, 0.531942824, 1.287397981, 1.267788686, 1.044308517, 0.784101458, 0.857134375,
         0.849139043, 0.765625, 0.860163643, 1.032352941],
        [0.627666398, 0.820366715, 0.580950992, 0.082787187, 0.619822347, 1.044308517, 1.365854152, 1.002690722,
         0.924698026, 0.890625, 1.035175294, 1.097058824],
        [0.26018453, 1.598648731, 0.337952159, 0.726009292, 0.384852735, 1.044308517, 0.581752694, 0.619964781,
         0.931894119, 1.125, 0.722388514, 0.938235294],
        [1.733335526, 0.554020228, 0.703471412, 0.767212132, 1.104815334, 1.044308517, 0.531165504, 0.514155981,
         1.099203295, 0.9375, 0.562271472, 0.629411765],
        [0.287814746, 0.148395368, 0.634043174, 0.198574796, 0.293221131, 1.044308517, 0.075880786, 0.083649889,
         0.949884353, 0.8125, 0.107985912, 0.208823529],
        [0.189266977, 0.057551029, 0.189906651, 0.122273241, 0.215334268, 1.044308517, 0.177055168, 0.040578506,
         0.867129277, 1.046875, 0.068887565, 0.094117647],
        [2.612436887, 0.139359775, 0.985268378, 0.101862575, 0.793922394, 1.044308517, 0.581752694, 0.66781418,
         1.289899775, 0.96875, 0.616264428, 0.467647059]
    ]

# 17年因变量
y = [-0.701602176, 1.206931601, 0.484983776, -0.323066765, -0.074971379, -0.33501202, -0.437959516, -0.062000482,
     -0.372511619, 0.006415759, -0.067846378, 0.16628753, 0.790505897, 1.300465163, 0.004857169, 0.666305648,
     -0.047496215, -0.123225557, -0.505538147, -0.336337061, 1.117800093, -0.057907969, -0.207856244, -0.017597478,
     -0.26471261, -0.677171175, -0.615784221, -0.515955623]
# 18年自变量
x_18 = np.array([
    [0.313089819, 0.074744044, 0.11123723, 0.04732439, 0.356867779, 0.733887734, 0.176576386, 0.036846454, 0.561653029,
     1.00983611, 0.125729681, 0.144621616],
    [1.184856223, 2.368779248, 0.995175936, 4.578189199, 2.416559692, 1.03950104, 0.958557522, 1.13014543, 0.96176037,
     1.055737751, 1.55545577, 2.285650329],
    [0.484067947, 1.60346343, 0.721055619, 0.680956388, 2.437098845, 1.03950104, 0.327927573, 0.327399024, 0.642425872,
     1.193442675, 0.6986978, 1.119245553],
    [1.052070612, 0.430006889, 0.410187287, 0.891441018, 0.695121951, 1.03950104, 0.277477178, 0.253495164, 0.706292772,
     0.979235015, 0.499326448, 0.55333488],
    [0.151437771, 0.699384754, 0.145998865, 1.919310925, 0.342747112, 1.03950104, 0.479278761, 0.392020954, 0.807728436,
     1.11693994, 0.725639874, 0.688524652],
    [0.68035972, 0.328241917, 1.170970488, 0.547893669, 0.304878049, 1.03950104, 0.25225198, 0.163347924, 0.604857108,
     0.994535563, 0.387965873, 0.465304331],
    [0.75408016, 0.615495166, 0.146992054, 0.18652542, 0.35237484, 1.03950104, 0.201801584, 0.32423473, 0.773916548,
     0.994535563, 0.567579704, 0.635077533],
    [1.866992339, 0.657814096, 1.850312145, 0.00376219, 0.842747112, 1.03950104, 2.396393806, 1.413033375, 1.217227968,
     1.132240487, 1.679389313, 0.848866009],
    [0.626623737, 0.562201582, 0.144012486, 0.385921489, 0.780487805, 0.483367983, 2.623420587, 0.243228786,
     0.989936943, 1.361748693, 0.495734172, 0.229508217],
    [1.316753636, 0.590802195, 1.836407491, 0.17266472, 1.620667522, 1.03950104, 1.488286679, 1.077125914, 1.050046967,
     0.994535563, 1.203412663, 1.182124517],
    [0.383257466, 0.933760125, 0.228433598, 0.826295728, 1.146341463, 1.03950104, 0.756755939, 0.553540619, 0.849054077,
     0.918032827, 0.619667714, 0.732539927],
    [0.124791829, 1.117502435, 1.473893303, 2.321667244, 0.884467266, 1.03950104, 0.731530741, 1.613157435, 1.243526104,
     0.826229544, 1.088459811, 1.24500348],
    [6.244920617, 2.184454949, 4.699772985, 0.947477848, 2.177792041, 0.795218295, 1.841439451, 1.911655902,
     1.134576687, 1.071038298, 2.144589133, 3.178531613],
    [0.376595981, 2.799783833, 2.82661748, 3.127567942, 1.931322208, 1.03950104, 2.724321379, 2.387917412, 1.185294519,
     1.071038298, 2.281095644, 3.247698473],
    [1.557011214, 1.270316175, 3.069948921, 0.314241869, 0.608472401, 1.03950104, 1.36216069, 1.99976393, 1.437005241,
     1.055737751, 1.704535249, 1.17583662],
    [0.629288331, 2.208233366, 0.961407491, 1.516360576, 2.164955071, 1.03950104, 1.059458314, 2.760390057, 1.31114988,
     0.887431733, 2.099685676, 1.257579273],
    [0.814477629, 1.353457491, 0.120175936, 1.111628137, 1.378690629, 1.03950104, 1.765763857, 1.307838156, 1.023748831,
     0.90273228, 1.26986978, 0.72625203],
    [0.371266792, 1.14751645, 0.175794552, 0.980347508, 0.412708601, 1.03950104, 1.160359106, 1.723837432, 1.125184496,
     0.810928997, 1.212393354, 1.024927108],
    [0.098145887, 0.072914935, 0.025822928, 0.284342359, 0.10012837, 1.03950104, 0.277477178, 0.055691587, 0.732590907,
     1.071038298, 0.127525819, 0.106894238],
    [0.548018208, 0.55446944, 0.289018161, 0.278006039, 0.801668806, 1.03950104, 0.504503959, 1.181547639, 1.433248364,
     1.025136657, 0.950157162, 0.562766725],
    [1.579216165, 2.315319381, 2.543558456, 3.724172071, 2.083440308, 1.03950104, 2.497294598, 3.225822647, 1.356232397,
     1.055737751, 2.582846879, 1.977543407],
    [1.243921394, 0.719421812, 0.53930193, 1.270828177, 1.245186136, 1.03950104, 0.882881928, 0.949218091, 0.897893471,
     0.749726809, 0.860350247, 1.07208633],
    [0.645719996, 0.83365798, 0.58399546, 0.06672937, 0.640564827, 1.03950104, 1.412611085, 1.072836537, 0.950489741,
     0.887431733, 1.05792546, 1.207276102],
    [0.329521483, 1.629486662, 0.355561861, 0.663333498, 0.086007702, 1.03950104, 0.605404751, 0.647977236, 0.956125055,
     1.101639392, 0.716659183, 0.924320766],
    [1.709337182, 0.542330807, 0.71807605, 0.776397208, 0.944159178, 1.03950104, 0.479278761, 0.541235028, 1.145847316,
     0.856830639, 0.556802874, 0.606781999],
    [0.282446986, 0.148739815, 0.591940976, 0.18355527, 0.337612323, 1.03950104, 0.075675594, 0.069051942, 0.897893471,
     0.887431733, 0.109564436, 0.213788476],
    [0.207394249, 0.068009597, 0.213535755, 0.09346072, 0.210526316, 1.03950104, 0.151351188, 0.04057329, 0.77203811,
     1.040437204, 0.071845532, 0.097462394],
    [2.424336627, 0.169691427, 1.050794551, 0.09959903, 0.696405648, 1.03950104, 0.529729157, 0.59706725, 1.232255474,
     0.948633921, 0.607094746, 0.490455917],
])
# 18年因变量
y_18 = np.array(
    [-0.70147, 1.26476, 0.43519, -0.23802, -0.03698, -0.34358, -0.35134, -0.16253, -0.59962, -0.01088, -0.07447,
     0.20232, 0.71892, 1.31930, -0.00547, 0.61931, 0.10645, -0.09306, -0.56431, -0.34590, 1.14553, -0.01501, -0.18560,
     -0.08246, -0.30496, -0.58582, -0.59364, -0.51669])
# 这里随机分割18年数据集

x_train_1, x_test_1, y_train_1, y_test_1 = train_test_split(x_18, y_18, random_state=9, train_size=0.5, test_size=0.5)
score_list = []
'''# 这个for循环内主要用来绘制高斯噪声影响
for l in np.arange(0.001, 0.999, 0.001):
    x_copy = x.copy()
    y_copy = y.copy()
    ran = []
    for i in range(0, 7):
        ran.append(random.randint(0, 27))
    x_noise = []
    y_noise = []
    for i in ran:
        x_r = x[i]
        y_r = y[i]
        x_r = list(map(lambda z: z + random.gauss(0, l), x_r))
        y_r = y_r + random.gauss(0, 0.001)
        x_noise.append(x_r)
        y_noise.append(y_r)
    x_copy.extend(x_noise)
    y_copy.extend(y_noise)
    x_copy = np.array(x_copy)
    y_copy = np.array(y_copy)
    x_train, x_test, y_train, y_test = train_test_split(x_copy, y_copy, random_state=9, train_size=0.5, test_size=0.5)
    model = LSSVMRegression(kernel='linear')
    model.fit(x_train, y_train)
    print('test_score:', model.score(x_test_1, y_test_1))
    score_list.append(model.score(x_test_1, y_test_1))
    x_copy.tolist()
    y_copy.tolist()
plt.plot(np.arange(0.001, 0.999, 0.001), score_list)
plt.xlabel(chr(963))
plt.ylabel('score')
plt.show()
exit(1)'''
# 以下代码主要用于不同模型的score检验
x = np.array(x)
y = np.array(y)
x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=9, train_size=0.5, test_size=0.5)
# model = NuSVR(kernel='linear', verbose=3, nu=0.2, C=1)
model = LSSVMRegression(kernel='linear')
poly = LSSVMRegression(kernel='poly')
rbf = LSSVMRegression(kernel='rbf')
mlp = MLPRegressor()
model.fit(x_train, y_train)
poly.fit(x_train, y_train)
rbf.fit(x_train, y_train)
mlp.fit(x_train, y_train)

print('train_score:', mlp.score(x_train, y_train))
print('test_score', mlp.score(x_test, y_test))
print(model.predict(x))
print(model.predict(x_18))
a = model.predict(x)
b = rbf.predict(x)
c = poly.predict(x)
d = mlp.predict(x)
print(d)
# plt.plot(range(0, len(model.predict(x))), a, c='r', label='linear')
# plt.plot(range(0, len(model.predict(x))), b, c='b', label='rbf')
plt.plot(range(0, len(model.predict(x))), d, c='b', label='MLP')
plt.plot(range(0, len(model.predict(x))), y, c='r', label='real')
plt.xticks(range(0, len(model.predict(x))), range(0, len(model.predict(x))), fontsize=10)
plt.xlabel('检测点')
plt.ylabel('score')
plt.title('MLP预测值与真实值对比图')
plt.legend()
plt.show()
exit(1)

# 以下代码用于绘制预测值和真实值对比
plt.title('MLP 预测值真实值对比', fontsize=15)
plt.plot(range(0, len(x_test)), model.predict(x_test), c='#00CED1', label='预测值', marker='v')
plt.plot(range(0, len(x_test)), y_test, c='#DC143C', label='实际值', marker='o')
plt.xticks(range(0, len(x_test)), ['点1', '点2', '点3', '点4', '点5', '点6', '点7', '点8',
                                   '点9', '点10', '点11', '点12', '点13', '点14'], fontsize=10)
plt.xlabel('预测点')
plt.ylabel('得分')
legend = plt.legend(fontsize=10)
plt.show()
